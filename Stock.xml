<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for Windows (x86-64) 2020.1 (Build 215U)" ts="2021-07-14 16:43:20">
<Class name="Stock.Company">
<Super>%Persistent</Super>
<TimeChanged>65851,74645.471371</TimeChanged>
<TimeCreated>65851,73875.349397</TimeCreated>

<Property name="CompanyName">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Index name="IdxOnCompany">
<Properties>CompanyName</Properties>
</Index>

<Method name="InsertCompany">
<ClassMethod>1</ClassMethod>
<FormalSpec>Company:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	Set Id=$O(^Stock.CompanyI("IdxOnCompany"," "_Company))
	If Id>0 Quit Id
	Set obj=..%New()
	Set obj.CompanyName=Company
	Do obj.%Save()
	Quit obj.%Id()
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^Stock.CompanyD</DataLocation>
<DefaultData>CompanyDefaultData</DefaultData>
<IdLocation>^Stock.CompanyD</IdLocation>
<IndexLocation>^Stock.CompanyI</IndexLocation>
<StreamLocation>^Stock.CompanyS</StreamLocation>
<Data name="CompanyDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>CompanyName</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="Stock.History">
<Super>%Persistent</Super>
<TimeChanged>65851,77594.964616</TimeChanged>
<TimeCreated>65851,73893.405029</TimeCreated>

<Property name="CompanyName">
<Type>Stock.Company</Type>
</Property>

<Property name="HistoryDate">
<Type>%String</Type>
</Property>

<Property name="FateNumber">
<Type>%Integer</Type>
</Property>

<Property name="Open">
<Type>%Float</Type>
</Property>

<Property name="Close">
<Type>%Float</Type>
</Property>

<Property name="Diff">
<Type>%Float</Type>
</Property>

<Property name="Signal">
<Type>%Integer</Type>
</Property>

<Index name="IdxHistory">
<Properties>CompanyName,HistoryDate</Properties>
</Index>

<Method name="LoadFile">
<ClassMethod>1</ClassMethod>
<FormalSpec>Company:%Integer</FormalSpec>
<Implementation><![CDATA[
	Set obj=##class(%FileCharacterStream).%New()
	Set obj.Filename="C:\temp\upload\Quote-Equity-INFY-EQ-17-04-2019-to-17-04-2021.csv"
	While('obj.AtEnd)
	{
		Set txt=obj.ReadLine()
		If $TR($P(txt,",",1),"""","")="Date " Continue
		Set HDate=$zd($zdh($TR($P(txt,",",1),""","""),5),3)
		Set Id=$O(^Stock.HistoryI("IdxHistory",Company," "_HDate,""))
		If Id>0
		{
			Set stock=..%OpenId(Id)
		}
		Else
		{
			Set stock=..%New()
			Set stock.HistoryDate=HDate
		}
		Set TRDate=$TR(HDate,"-")
		Set stock.CompanyName=##class(Stock.Company).%OpenId(Company)
		Set stock.FateNumber=..SingleDigit(TRDate)
		Set stock.Open=$TR($P(txt,""",""",3),"""","")
		Set stock.Close=$TR($P(txt,""",""",8),"""","")
		Set stock.Diff=stock.Close-stock.Open
		If stock.Diff=0
		{
			Set stock.Signal=3
		}
		ElseIf stock.Diff>0
		{
			Set stock.Signal=1
		}
		ElseIf stock.Diff<0
		{
			Set stock.Signal=2
		}
		Do stock.%Save()
		
	}
	Do obj.%Close()
]]></Implementation>
</Method>

<Method name="SingleDigit">
<ClassMethod>1</ClassMethod>
<FormalSpec>TRDate:%Integer</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	Set Total=0
	For 
	{
		For inc=1:1:$L(TRDate)
		{
			Set Total=Total+$E(TRDate,inc)
		}
		Quit:$L(Total)=1
		Set TRDate=Total,Total=0
	}
	Quit Total
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^Stock.HistoryD</DataLocation>
<DefaultData>HistoryDefaultData</DefaultData>
<IdLocation>^Stock.HistoryD</IdLocation>
<IndexLocation>^Stock.HistoryI</IndexLocation>
<StreamLocation>^Stock.HistoryS</StreamLocation>
<Data name="HistoryDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>CompanyName</Value>
</Value>
<Value name="3">
<Value>HistoryDate</Value>
</Value>
<Value name="4">
<Value>Open</Value>
</Value>
<Value name="5">
<Value>Close</Value>
</Value>
<Value name="6">
<Value>Diff</Value>
</Value>
<Value name="7">
<Value>Signal</Value>
</Value>
<Value name="8">
<Value>FateNumber</Value>
</Value>
</Data>
</Storage>
</Class>


</Export>
